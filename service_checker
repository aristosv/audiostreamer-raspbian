check_stream_script ()
{
sudo bash -c 'cat > /usr/local/bin/checkstream' << 'EOL'
#!/bin/bash

# operations if relay stream is up
if [ $(curl -s --head -w %{http_code} $relaystreamurl -o /dev/null) -eq 200 ]
 then
  echo relay stream url is up
 
 if [ $(sudo systemctl is-active localstream.service) == active ]
  then
   echo stopping local stream service
   sudo systemctl stop localstream.service
   sudo systemctl disable localstream.service > /dev/null 2>&1
  else
   echo local stream service is not active
 fi

 if [ $(sudo systemctl is-active localmedia.service) == active ]
  then
   echo stopping local media service
   sudo systemctl stop localmedia.service
   sudo systemctl disable localmedia.service > /dev/null 2>&1
  else
   echo local media service is not active  
 fi
 
 if [ $(sudo systemctl is-active relaystream.service) !== active ]
  then
   echo starting relay stream service
   sudo systemctl restart relaystream.service
   sudo systemctl enable relaystream.service > /dev/null 2>&1
  else
   echo relay stream service is active  
 fi
fi

# operations if relay stream is down
if [ $(curl -s --head -w %{http_code} $relaystreamurl -o /dev/null) -eq 502 ]
 then
  echo relay stream url is down

 if [ $(sudo systemctl is-active relaystream.service) == active ]
  then
   echo stoppping relay stream service
   sudo systemctl stop relaystream.service
   sudo systemctl disable relaystream.service > /dev/null 2>&1
  else
   echo relay stream service is not active  
 fi
 
 if [ $(sudo systemctl is-active localmedia.service) == active ]
  then
   echo stopping local media service
   sudo systemctl stop localmedia.service
   sudo systemctl disable localmedia.service > /dev/null 2>&1
  else
   echo local media service is not active  
 fi
 
 if [ $(sudo systemctl is-active localstream.service) !== active ]
  then
   echo starting local stream service
   sudo systemctl restart localstream.service
   sudo systemctl enable localstream.service > /dev/null 2>&1
  else
   echo local stream service is active  
 fi
fi

# operations if relay and local streams are down
if [ $(curl -s --head -w %{http_code} $relaystreamurl -o /dev/null) -eq 502 ] && [ $(curl -s --head -w %{http_code} $localstreamurl -o /dev/null) -eq 502 ]
 then
  echo relay and local streams are down
  
 if [ $(sudo systemctl is-active relaystream.service) == active ]
  then
   echo stoppping relay stream service
   sudo systemctl stop relaystream.service
   sudo systemctl disable relaystream.service > /dev/null 2>&1
  else
   echo relay stream service is not active  
 fi
 
 if [ $(sudo systemctl is-active localstream.service) == active ]
  then
   echo stopping local stream service
   sudo systemctl stop localstream.service
   sudo systemctl disable localstream.service > /dev/null 2>&1
  else
   echo local stream service is not active  
 fi
 
 if [ $(sudo systemctl is-active localmedia.service) !== active ]
  then
   echo starting local media
   sudo systemctl restart localmedia.service
   sudo systemctl enable localmedia.service > /dev/null 2>&1
  else
   echo local media service is active  
 fi
fi
EOL

sudo chmod +x /usr/local/bin/checkstream
}

check_stream_service ()
{
sudo bash -c 'cat > /etc/systemd/system/checkstream.service' << 'EOL'
[Unit]
Description=check stream
After=network.target

[Service]
ExecStart=/bin/bash -c "while true; do /usr/local/bin/checkstream; sleep 10; done"
Restart=always

[Install]
WantedBy=multi-user.target
EOL

sudo systemctl daemon-reload
sudo systemctl enable checkstream.service > /dev/null 2>&1
}

echo check stream script ; check_stream_script
echo check stream service ; check_stream_service
